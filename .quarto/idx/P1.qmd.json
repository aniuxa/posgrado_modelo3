{"title":"Introducción: `{dplyr}` y `{ggplot2}`","markdown":{"headingText":"Introducción: `{dplyr}` y `{ggplot2}`","containsRefs":false,"markdown":"\n\n## Paquetes\n\n```{r}\nif (!require(\"pacman\")) install.packages(\"pacman\")#instala pacman si se requiere\npacman::p_load(tidyverse,\n               readxl,\n               writexl, \n               haven,\n               sjlabelled, \n               janitor,\n               infer, \n               ggpubr,\n               magrittr,\n               gt)\n```\n\n\n## Cargando los datos\n\nDesde STATA\n```{r}\ntlaxt322<- haven::read_dta(\"./datos/tlaxt322.dta\")\n\n```\n\nDesde Excel:\n\n```{r}\nICI_2021 <- readxl::read_excel(\"./datos/ICI_2021.xlsx\",\n                               sheet = \"para_importar\")\n\n```\n\n## Un poquito de `{dplyr}` y limpieza\n\n### Primero, los pipes\n\nR utiliza dos pipes el nativo `|>` y el pipe que está en `{dplyr}` `%>%`. Algunas de las diferencias las puedes checar acá <https://eliocamp.github.io/codigo-r/2021/05/r-pipa-nativa/>\n\nEn estas prácticas utilizaremos el segundo, pero son muy parecidos y para que esta instructora recicle algunos de sus códigos viejos. Pero funcionan igual:\n\n```{r}\ntlaxt322|> #pipe nativo, no necesita instalación\n  head()\n```\n\n\n```{r}\ntlaxt322 %>%  #pipe de dplyr, necesita instalación de dplyr en tidyverse\n  head()\n```\n\n### Limpieza de nombres con `{janitor}`\n\nEste paso también nos permitirá enseñar otro *pipe* que está en el paquete  `{magrittr}`.\n\nLos nombres de una base de datos son los nombres de las columnas. \n\n```{r}\nnames(tlaxt322)\nnames(ICI_2021)\n```\n\nComo vemos en las bases hay mayúsculas, caracteres especiales y demás. Esto lo podemos cambiar\n\n```{r}\nICI_2021<-ICI_2021 %>% \n  janitor::clean_names()\n\nnames(ICI_2021)\n```\n\nSi quisiéramos que la acción quedará de un solo, podemos usar un pipe diferente:\n\n```{r}\ntlaxt322%<>% \n  clean_names()\n\nnames(tlaxt322)\n```\n\nMás de otros *pipes* <https://r4ds.had.co.nz/pipes.html>\n\n## `select()` y `filter()`\n\nEste es un recordatorio de que en `{dplyr}`, se filtran CASOS, es decir, líneas o renglones, y se seleccionan VARIABLES. \n\nPor ejemplo:\n\n```{r}\ntlaxt322%>% \n  dplyr::select(sex, eda) %>% \n  dplyr::filter(eda>11)\n```\n\nEn la documentación de la base de datos de la ENOE se nos señala que debemos quedarnos con quienes tienen entrevista completa `r_def==0` y con quiénes son habitante habituales `(c_res!=2\")`\n\nHagamos estos cambios:\n\n```{r}\ntlaxt322%<>%\n  filter(r_def==0) %>% \n  filter(!c_res==2)\n```\n\n\n\n## Tabulados con `tabyl()`\n\nEl comando tabyl del paquete `{janitor}` nos sirve para hacer tabulados. Para que sean más bonitas, necesitaremos cambiar algunas de nuestras variables a sus datos etiquetados\n\n```{r}\ntlaxt322%>%\n  dplyr::mutate(sex=sjlabelled::as_label(sex))  %>%\n  janitor::tabyl(sex)\n```\n\nPara ver que esto es una distribución de frecuencias sería muy útil ver la proporción total, ello se realiza agregando un elemento más en nuestro código con una \"tubería\":\n\n```{r}\ntlaxt322%>%\n  mutate(sex=as_label(sex)) %>% \n  tabyl(sex) %>%\n  adorn_totals() #primer enchulamiento\n```\n\nAhora, las proporciones son raras, y preferimos por los porcentajes.\n\n```{r}\ntlaxt322%>%\n  mutate(sex=as_label(sex)) %>% # cambia los valores de la variable a sus etiquetas\n  tabyl(sex) %>% # para hacer la tabla\n  adorn_totals() %>% # añade totales\n  adorn_pct_formatting()  # nos da porcentaje en lugar de proporción\n                \n```\n\nVamos a darle una \"ojeada\" a esta variable\n```{r}\nglimpse(tlaxt322$niv_ins)\n```\n\n\nHoy hacemos la tabla, con las etiquetas:\n\n```{r}\ntlaxt322%>%\n  mutate(niv_ins=as_label(niv_ins)) %>% #esto sólo si hay etiquetas declaradas, recuerda\n  tabyl(niv_ins)\n```\n\nPara que no nos salgan las categorías sin datos podemos poner una opción dentro del comando \"tabyl()\"\n\n```{r}\ntlaxt322%>% \n  mutate(niv_ins=as_label(niv_ins)) %>% \n  tabyl(niv_ins, \n        show_missing_levels=F ) %>% # esta opción elimina los valores con 0\n  adorn_totals()  \n```\n\n\n### Cálculo de frecuencias\n\nLas tablas de doble entrada tiene su nombre porque en las columnas entran los valores de una variable categórica, y en las filas de una segunda. Básicamente es como hacer un conteo de todas las combinaciones posibles entre los valores de una variable con la otra. \n\nPor ejemplo, si quisiéramos combinar las dos variables que ya estudiamos lo podemos hacer, con una tabla de doble entrada:\n\n```{r}\ntlaxt322%>% \n  mutate(niv_ins=as_label(niv_ins)) %>% # para que las lea como factor\n  mutate(sex=as_label(sex)) %>% # para que las lea como factor\n  tabyl(niv_ins, sex, show_missing_levels=F ) %>% # incluimos aquí\n  adorn_totals()  \n```\n\nObservamos que en cada celda confluyen los casos que comparten las mismas características:\n\n```{r}\ntlaxt322%>%   \n    count(niv_ins==1 & sex==1) # nos da la segunda celda de la izquierda\n\n```\n\n### Totales y porcentajes\n\nDe esta manera se colocan todos los datos. Si observa al poner la función \"adorn_totals()\" lo agregó como una nueva fila de totales, pero también podemos pedirle que agregue una columna de totales. \n\n\n```{r}\ntlaxt322%>% \n  mutate(niv_ins=as_label(niv_ins)) %>% # para que las lea como factor\n  mutate(sex=as_label(sex)) %>% # para que las lea como factor\n  tabyl(niv_ins, sex, show_missing_levels=F ) %>% # incluimos aquí sex\n  adorn_totals(\"col\")  \n```\n\nO bien agregar los dos, introduciendo en el argumento `c(\"col\", \"row\")` un vector de caracteres de las dos opciones requeridas:\n\n```{r}\ntlaxt322%>% \n  mutate(niv_ins=as_label(niv_ins)) %>% # para que las lea como factor\n  mutate(sex=as_label(sex)) %>% # para que las lea como factor\n  tabyl(niv_ins, sex, show_missing_levels=F ) %>% # incluimos aquí sexo\n  adorn_totals(c(\"col\", \"row\")) \n```\n\nDel mismo modo, podemos calcular los porcentajes. Pero los podemos calcular de tres formas. Uno es que lo calculemos para los totales calculados para las filas, para las columnas o para el gran total poblacional. \n\nPara columnas tenemos el siguiente código y los siguientes resultados:\n```{r}\ntlaxt322%>% \n  mutate(niv_ins=as_label(niv_ins)) %>% # para que las lea como factor\n  mutate(sex=as_label(sex)) %>% # para que las lea como factor\n  tabyl(niv_ins, sex, show_missing_levels=F ) %>% # incluimos aquí sexo\n  adorn_totals(c(\"col\", \"row\")) %>% \n  adorn_percentages(\"col\") %>% # Divide los valores entre el total de la columna\n  adorn_pct_formatting() # lo vuelve porcentaje\n```\n\nCuando se hagan cuadros de distribuciones (que todas sus partes suman 100), los porcentajes pueden ser una gran ayuda para la interpretación, sobre todos cuando se comparar poblaciones de categorías de diferente tamaño. Por lo general, queremos que los cuadros nos den información de donde están los totales y su 100%, de esta manera el lector se puede guiar de porcentaje con respecto a qué está leyendo. En este caso, vemos que el 100% es común en la última fila. \n\nVeamos la diferencia de cómo podemos leer la misma celda, pero hoy, hemos calculado los porcentajes a nivel de fila:\n```{r}\ntlaxt322%>% \n  mutate(niv_ins=as_label(niv_ins)) %>% # para que las lea como factor\n  mutate(sex=as_label(sex)) %>% # para que las lea como factor\n  tabyl(niv_ins, sex, show_missing_levels=F ) %>% \n  adorn_totals(c(\"col\", \"row\")) %>% \n  adorn_percentages(\"row\") %>% # Divide los valores entre el total de la fila\n  adorn_pct_formatting() # lo vuelve porcentaje\n```\n\n\nFinalmente, podemos calcular los porcentajes con referencia a la población total en análisis. Es decir la celda en la esquina inferior derecha de nuestra tabla original.\n\n```{r}\ntlaxt322%>% \n  mutate(niv_ins=as_label(niv_ins)) %>% # para que las lea como factor\n  mutate(sex=as_label(sex)) %>% # para que las lea como factor\n  tabyl(niv_ins, sex, show_missing_levels=F ) %>% # incluimos aquí sexo\n  adorn_totals(c(\"col\", \"row\")) %>% \n   adorn_percentages(\"all\") %>% # Divide los valores entre el total de la población\n  adorn_pct_formatting() # lo vuelve porcentaje\n```\n\n## *Grammar of tables: gt*\nEs un paquete que nos permite poner nuestras tablas en mejores formatos. \n\nGuardemos un ejemplo anterior en un objeto\n```{r}\nmi_tabla<-tlaxt322%>% \n  mutate(niv_ins=as_label(niv_ins)) %>% # para que las lea como factor\n  mutate(sex=as_label(sex)) %>% # para que las lea como factor\n  tabyl(niv_ins, sex, show_missing_levels=F ) %>% # incluimos aquí sexo\n  adorn_totals(c(\"col\", \"row\")) %>% \n   adorn_percentages(\"all\") %>% # Divide los valores entre el total de la población\n  adorn_pct_formatting() # lo vuelve porcentaje\n```\n\nVeamos qué pasa con el comando \"gt\"\n\n```{r}\ngt_tabla<-gt(mi_tabla)\ngt_tabla\n```\n\nCon este formato será bastante sencillo agregar títulos y demás:\n\n```{r}\ngt_tabla<-gt_tabla %>%\n  tab_header(\n    title = \"Distribución del sexo de la población según nivel de escolaridad\",\n    subtitle = \"Tlaxcala, trimestre III de 2022\"\n  )\n\ngt_tabla\n```\n\nAgreguemos la fuente a nuestra tabla:\n\n```{r}\ngt_tabla<-gt_tabla %>%\n  tab_source_note(\n    source_note = \"Fuente: Cálculos propios con datos de INEGI\"\n  )\n\ngt_tabla\n```\n\n\nCheca más de este paquete por aquí <https://gt.rstudio.com/articles/intro-creating-gt-tables.html>\n\n## Descriptivos para variables cuantitativas\nVamos a empezar a revisar los gráficos para variables cuantitativas.\n\n### Medidas numéricas básicas\n5 números\n\n```{r}\nsummary(tlaxt322$ing_x_hrs) ## ingreso por horas \n```\n\nCon pipes se pueden crear \"indicadores\" de nuestras variables es un tibble\n```{r}\ntlaxt322%>% \n  summarise(nombre_indicador=mean(ing_x_hrs, na.rm=T))\n```\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"P1.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":{"light":"flatly","dark":"darkly"}},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"P1.pdf"},"language":{},"metadata":{"block-headings":true,"editor":"visual","documentclass":"report"},"extensions":{"book":{}}}}}